//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientServerApp.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://localhost/", ConfigurationName="ServiceReference1.ShopSoap")]
    public interface ShopSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/AdminLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AdminLogin(string clientConnection, string clientsTableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/AdminLogin", ReplyAction="*")]
        System.Threading.Tasks.Task AdminLoginAsync(string clientConnection, string clientsTableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/NewClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void NewClient(string clientConnection, string tableName, string[] values);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/NewClient", ReplyAction="*")]
        System.Threading.Tasks.Task NewClientAsync(string clientConnection, string tableName, string[] values);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/ShowAllGoodsOfType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ShowAllGoodsOfType(string goodType);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/ShowAllGoodsOfType", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ShowAllGoodsOfTypeAsync(string goodType);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/ShowCatalog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ShowCatalog(string connectionToClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/ShowCatalog", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ShowCatalogAsync(string connectionToClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/LogIn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LogIn(string connectionToClient, string tableName, string loginName, string passwordName, string loginValue, string passwordValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/LogIn", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LogInAsync(string connectionToClient, string tableName, string loginName, string passwordName, string loginValue, string passwordValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/BuyProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void BuyProduct(string type, int id, int number, string clientConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/BuyProduct", ReplyAction="*")]
        System.Threading.Tasks.Task BuyProductAsync(string type, int id, int number, string clientConnectionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/ClientBuy", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ClientBuy(string clientConnection, string clientsTableName, string clientID, string productType, int productID, int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/ClientBuy", ReplyAction="*")]
        System.Threading.Tasks.Task ClientBuyAsync(string clientConnection, string clientsTableName, string clientID, string productType, int productID, int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/AddOrSubtract", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddOrSubtract(string clientConnection, string clientsTableName, string clientID, string productType, int productID, bool plus);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/AddOrSubtract", ReplyAction="*")]
        System.Threading.Tasks.Task AddOrSubtractAsync(string clientConnection, string clientsTableName, string clientID, string productType, int productID, bool plus);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/FillBasket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FillBasket(string clientId, string connectionToClient, string clientTable);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/FillBasket", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> FillBasketAsync(string clientId, string connectionToClient, string clientTable);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/DeleteFromBasket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteFromBasket(string product, string tableClients, string clientID, int productID, string connectionToClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/DeleteFromBasket", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteFromBasketAsync(string product, string tableClients, string clientID, int productID, string connectionToClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/Hash", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Hash(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://localhost/Hash", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HashAsync(string str);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ShopSoapChannel : ClientServerApp.ServiceReference1.ShopSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShopSoapClient : System.ServiceModel.ClientBase<ClientServerApp.ServiceReference1.ShopSoap>, ClientServerApp.ServiceReference1.ShopSoap {
        
        public ShopSoapClient() {
        }
        
        public ShopSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ShopSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShopSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ShopSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AdminLogin(string clientConnection, string clientsTableName) {
            base.Channel.AdminLogin(clientConnection, clientsTableName);
        }
        
        public System.Threading.Tasks.Task AdminLoginAsync(string clientConnection, string clientsTableName) {
            return base.Channel.AdminLoginAsync(clientConnection, clientsTableName);
        }
        
        public void NewClient(string clientConnection, string tableName, string[] values) {
            base.Channel.NewClient(clientConnection, tableName, values);
        }
        
        public System.Threading.Tasks.Task NewClientAsync(string clientConnection, string tableName, string[] values) {
            return base.Channel.NewClientAsync(clientConnection, tableName, values);
        }
        
        public System.Data.DataSet ShowAllGoodsOfType(string goodType) {
            return base.Channel.ShowAllGoodsOfType(goodType);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ShowAllGoodsOfTypeAsync(string goodType) {
            return base.Channel.ShowAllGoodsOfTypeAsync(goodType);
        }
        
        public System.Data.DataSet ShowCatalog(string connectionToClient) {
            return base.Channel.ShowCatalog(connectionToClient);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ShowCatalogAsync(string connectionToClient) {
            return base.Channel.ShowCatalogAsync(connectionToClient);
        }
        
        public string LogIn(string connectionToClient, string tableName, string loginName, string passwordName, string loginValue, string passwordValue) {
            return base.Channel.LogIn(connectionToClient, tableName, loginName, passwordName, loginValue, passwordValue);
        }
        
        public System.Threading.Tasks.Task<string> LogInAsync(string connectionToClient, string tableName, string loginName, string passwordName, string loginValue, string passwordValue) {
            return base.Channel.LogInAsync(connectionToClient, tableName, loginName, passwordName, loginValue, passwordValue);
        }
        
        public void BuyProduct(string type, int id, int number, string clientConnectionString) {
            base.Channel.BuyProduct(type, id, number, clientConnectionString);
        }
        
        public System.Threading.Tasks.Task BuyProductAsync(string type, int id, int number, string clientConnectionString) {
            return base.Channel.BuyProductAsync(type, id, number, clientConnectionString);
        }
        
        public void ClientBuy(string clientConnection, string clientsTableName, string clientID, string productType, int productID, int number) {
            base.Channel.ClientBuy(clientConnection, clientsTableName, clientID, productType, productID, number);
        }
        
        public System.Threading.Tasks.Task ClientBuyAsync(string clientConnection, string clientsTableName, string clientID, string productType, int productID, int number) {
            return base.Channel.ClientBuyAsync(clientConnection, clientsTableName, clientID, productType, productID, number);
        }
        
        public void AddOrSubtract(string clientConnection, string clientsTableName, string clientID, string productType, int productID, bool plus) {
            base.Channel.AddOrSubtract(clientConnection, clientsTableName, clientID, productType, productID, plus);
        }
        
        public System.Threading.Tasks.Task AddOrSubtractAsync(string clientConnection, string clientsTableName, string clientID, string productType, int productID, bool plus) {
            return base.Channel.AddOrSubtractAsync(clientConnection, clientsTableName, clientID, productType, productID, plus);
        }
        
        public System.Data.DataSet FillBasket(string clientId, string connectionToClient, string clientTable) {
            return base.Channel.FillBasket(clientId, connectionToClient, clientTable);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FillBasketAsync(string clientId, string connectionToClient, string clientTable) {
            return base.Channel.FillBasketAsync(clientId, connectionToClient, clientTable);
        }
        
        public void DeleteFromBasket(string product, string tableClients, string clientID, int productID, string connectionToClient) {
            base.Channel.DeleteFromBasket(product, tableClients, clientID, productID, connectionToClient);
        }
        
        public System.Threading.Tasks.Task DeleteFromBasketAsync(string product, string tableClients, string clientID, int productID, string connectionToClient) {
            return base.Channel.DeleteFromBasketAsync(product, tableClients, clientID, productID, connectionToClient);
        }
        
        public string Hash(string str) {
            return base.Channel.Hash(str);
        }
        
        public System.Threading.Tasks.Task<string> HashAsync(string str) {
            return base.Channel.HashAsync(str);
        }
    }
}
