//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.8.3928.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="ShopSoap", Namespace="https://localhost/")]
public partial class Shop : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback AdminLoginOperationCompleted;
    
    private System.Threading.SendOrPostCallback NewClientOperationCompleted;
    
    private System.Threading.SendOrPostCallback ShowAllGoodsOfTypeOperationCompleted;
    
    private System.Threading.SendOrPostCallback ShowCatalogOperationCompleted;
    
    private System.Threading.SendOrPostCallback LogInOperationCompleted;
    
    private System.Threading.SendOrPostCallback BuyProductOperationCompleted;
    
    private System.Threading.SendOrPostCallback ClientBuyOperationCompleted;
    
    private System.Threading.SendOrPostCallback AddOrSubtractOperationCompleted;
    
    private System.Threading.SendOrPostCallback FillBasketOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteFromBasketOperationCompleted;
    
    private System.Threading.SendOrPostCallback HashOperationCompleted;
    
    /// <remarks/>
    public Shop() {
        this.Url = "https://localhost:44308/Shop.asmx";
    }
    
    /// <remarks/>
    public event AdminLoginCompletedEventHandler AdminLoginCompleted;
    
    /// <remarks/>
    public event NewClientCompletedEventHandler NewClientCompleted;
    
    /// <remarks/>
    public event ShowAllGoodsOfTypeCompletedEventHandler ShowAllGoodsOfTypeCompleted;
    
    /// <remarks/>
    public event ShowCatalogCompletedEventHandler ShowCatalogCompleted;
    
    /// <remarks/>
    public event LogInCompletedEventHandler LogInCompleted;
    
    /// <remarks/>
    public event BuyProductCompletedEventHandler BuyProductCompleted;
    
    /// <remarks/>
    public event ClientBuyCompletedEventHandler ClientBuyCompleted;
    
    /// <remarks/>
    public event AddOrSubtractCompletedEventHandler AddOrSubtractCompleted;
    
    /// <remarks/>
    public event FillBasketCompletedEventHandler FillBasketCompleted;
    
    /// <remarks/>
    public event DeleteFromBasketCompletedEventHandler DeleteFromBasketCompleted;
    
    /// <remarks/>
    public event HashCompletedEventHandler HashCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost/AdminLogin", RequestNamespace="https://localhost/", ResponseNamespace="https://localhost/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void AdminLogin(string clientConnection, string clientsTableName) {
        this.Invoke("AdminLogin", new object[] {
                    clientConnection,
                    clientsTableName});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAdminLogin(string clientConnection, string clientsTableName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AdminLogin", new object[] {
                    clientConnection,
                    clientsTableName}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndAdminLogin(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void AdminLoginAsync(string clientConnection, string clientsTableName) {
        this.AdminLoginAsync(clientConnection, clientsTableName, null);
    }
    
    /// <remarks/>
    public void AdminLoginAsync(string clientConnection, string clientsTableName, object userState) {
        if ((this.AdminLoginOperationCompleted == null)) {
            this.AdminLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdminLoginOperationCompleted);
        }
        this.InvokeAsync("AdminLogin", new object[] {
                    clientConnection,
                    clientsTableName}, this.AdminLoginOperationCompleted, userState);
    }
    
    private void OnAdminLoginOperationCompleted(object arg) {
        if ((this.AdminLoginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AdminLoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost/NewClient", RequestNamespace="https://localhost/", ResponseNamespace="https://localhost/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void NewClient(string clientConnection, string tableName, string[] values) {
        this.Invoke("NewClient", new object[] {
                    clientConnection,
                    tableName,
                    values});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginNewClient(string clientConnection, string tableName, string[] values, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("NewClient", new object[] {
                    clientConnection,
                    tableName,
                    values}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndNewClient(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void NewClientAsync(string clientConnection, string tableName, string[] values) {
        this.NewClientAsync(clientConnection, tableName, values, null);
    }
    
    /// <remarks/>
    public void NewClientAsync(string clientConnection, string tableName, string[] values, object userState) {
        if ((this.NewClientOperationCompleted == null)) {
            this.NewClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewClientOperationCompleted);
        }
        this.InvokeAsync("NewClient", new object[] {
                    clientConnection,
                    tableName,
                    values}, this.NewClientOperationCompleted, userState);
    }
    
    private void OnNewClientOperationCompleted(object arg) {
        if ((this.NewClientCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.NewClientCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost/ShowAllGoodsOfType", RequestNamespace="https://localhost/", ResponseNamespace="https://localhost/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet ShowAllGoodsOfType(string goodType) {
        object[] results = this.Invoke("ShowAllGoodsOfType", new object[] {
                    goodType});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginShowAllGoodsOfType(string goodType, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ShowAllGoodsOfType", new object[] {
                    goodType}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndShowAllGoodsOfType(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void ShowAllGoodsOfTypeAsync(string goodType) {
        this.ShowAllGoodsOfTypeAsync(goodType, null);
    }
    
    /// <remarks/>
    public void ShowAllGoodsOfTypeAsync(string goodType, object userState) {
        if ((this.ShowAllGoodsOfTypeOperationCompleted == null)) {
            this.ShowAllGoodsOfTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowAllGoodsOfTypeOperationCompleted);
        }
        this.InvokeAsync("ShowAllGoodsOfType", new object[] {
                    goodType}, this.ShowAllGoodsOfTypeOperationCompleted, userState);
    }
    
    private void OnShowAllGoodsOfTypeOperationCompleted(object arg) {
        if ((this.ShowAllGoodsOfTypeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ShowAllGoodsOfTypeCompleted(this, new ShowAllGoodsOfTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost/ShowCatalog", RequestNamespace="https://localhost/", ResponseNamespace="https://localhost/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet ShowCatalog(string connectionToClient) {
        object[] results = this.Invoke("ShowCatalog", new object[] {
                    connectionToClient});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginShowCatalog(string connectionToClient, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ShowCatalog", new object[] {
                    connectionToClient}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndShowCatalog(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void ShowCatalogAsync(string connectionToClient) {
        this.ShowCatalogAsync(connectionToClient, null);
    }
    
    /// <remarks/>
    public void ShowCatalogAsync(string connectionToClient, object userState) {
        if ((this.ShowCatalogOperationCompleted == null)) {
            this.ShowCatalogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowCatalogOperationCompleted);
        }
        this.InvokeAsync("ShowCatalog", new object[] {
                    connectionToClient}, this.ShowCatalogOperationCompleted, userState);
    }
    
    private void OnShowCatalogOperationCompleted(object arg) {
        if ((this.ShowCatalogCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ShowCatalogCompleted(this, new ShowCatalogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost/LogIn", RequestNamespace="https://localhost/", ResponseNamespace="https://localhost/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string LogIn(string connectionToClient, string tableName, string loginName, string passwordName, string loginValue, string passwordValue) {
        object[] results = this.Invoke("LogIn", new object[] {
                    connectionToClient,
                    tableName,
                    loginName,
                    passwordName,
                    loginValue,
                    passwordValue});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginLogIn(string connectionToClient, string tableName, string loginName, string passwordName, string loginValue, string passwordValue, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("LogIn", new object[] {
                    connectionToClient,
                    tableName,
                    loginName,
                    passwordName,
                    loginValue,
                    passwordValue}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndLogIn(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void LogInAsync(string connectionToClient, string tableName, string loginName, string passwordName, string loginValue, string passwordValue) {
        this.LogInAsync(connectionToClient, tableName, loginName, passwordName, loginValue, passwordValue, null);
    }
    
    /// <remarks/>
    public void LogInAsync(string connectionToClient, string tableName, string loginName, string passwordName, string loginValue, string passwordValue, object userState) {
        if ((this.LogInOperationCompleted == null)) {
            this.LogInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogInOperationCompleted);
        }
        this.InvokeAsync("LogIn", new object[] {
                    connectionToClient,
                    tableName,
                    loginName,
                    passwordName,
                    loginValue,
                    passwordValue}, this.LogInOperationCompleted, userState);
    }
    
    private void OnLogInOperationCompleted(object arg) {
        if ((this.LogInCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.LogInCompleted(this, new LogInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost/BuyProduct", RequestNamespace="https://localhost/", ResponseNamespace="https://localhost/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void BuyProduct(string type, int id, int number, string clientConnectionString) {
        this.Invoke("BuyProduct", new object[] {
                    type,
                    id,
                    number,
                    clientConnectionString});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginBuyProduct(string type, int id, int number, string clientConnectionString, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("BuyProduct", new object[] {
                    type,
                    id,
                    number,
                    clientConnectionString}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndBuyProduct(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void BuyProductAsync(string type, int id, int number, string clientConnectionString) {
        this.BuyProductAsync(type, id, number, clientConnectionString, null);
    }
    
    /// <remarks/>
    public void BuyProductAsync(string type, int id, int number, string clientConnectionString, object userState) {
        if ((this.BuyProductOperationCompleted == null)) {
            this.BuyProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuyProductOperationCompleted);
        }
        this.InvokeAsync("BuyProduct", new object[] {
                    type,
                    id,
                    number,
                    clientConnectionString}, this.BuyProductOperationCompleted, userState);
    }
    
    private void OnBuyProductOperationCompleted(object arg) {
        if ((this.BuyProductCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.BuyProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost/ClientBuy", RequestNamespace="https://localhost/", ResponseNamespace="https://localhost/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void ClientBuy(string clientConnection, string clientsTableName, string clientID, string productType, int productID, int number) {
        this.Invoke("ClientBuy", new object[] {
                    clientConnection,
                    clientsTableName,
                    clientID,
                    productType,
                    productID,
                    number});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginClientBuy(string clientConnection, string clientsTableName, string clientID, string productType, int productID, int number, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ClientBuy", new object[] {
                    clientConnection,
                    clientsTableName,
                    clientID,
                    productType,
                    productID,
                    number}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndClientBuy(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void ClientBuyAsync(string clientConnection, string clientsTableName, string clientID, string productType, int productID, int number) {
        this.ClientBuyAsync(clientConnection, clientsTableName, clientID, productType, productID, number, null);
    }
    
    /// <remarks/>
    public void ClientBuyAsync(string clientConnection, string clientsTableName, string clientID, string productType, int productID, int number, object userState) {
        if ((this.ClientBuyOperationCompleted == null)) {
            this.ClientBuyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientBuyOperationCompleted);
        }
        this.InvokeAsync("ClientBuy", new object[] {
                    clientConnection,
                    clientsTableName,
                    clientID,
                    productType,
                    productID,
                    number}, this.ClientBuyOperationCompleted, userState);
    }
    
    private void OnClientBuyOperationCompleted(object arg) {
        if ((this.ClientBuyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ClientBuyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost/AddOrSubtract", RequestNamespace="https://localhost/", ResponseNamespace="https://localhost/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void AddOrSubtract(string clientConnection, string clientsTableName, string clientID, string productType, int productID, bool plus) {
        this.Invoke("AddOrSubtract", new object[] {
                    clientConnection,
                    clientsTableName,
                    clientID,
                    productType,
                    productID,
                    plus});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddOrSubtract(string clientConnection, string clientsTableName, string clientID, string productType, int productID, bool plus, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddOrSubtract", new object[] {
                    clientConnection,
                    clientsTableName,
                    clientID,
                    productType,
                    productID,
                    plus}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndAddOrSubtract(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void AddOrSubtractAsync(string clientConnection, string clientsTableName, string clientID, string productType, int productID, bool plus) {
        this.AddOrSubtractAsync(clientConnection, clientsTableName, clientID, productType, productID, plus, null);
    }
    
    /// <remarks/>
    public void AddOrSubtractAsync(string clientConnection, string clientsTableName, string clientID, string productType, int productID, bool plus, object userState) {
        if ((this.AddOrSubtractOperationCompleted == null)) {
            this.AddOrSubtractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrSubtractOperationCompleted);
        }
        this.InvokeAsync("AddOrSubtract", new object[] {
                    clientConnection,
                    clientsTableName,
                    clientID,
                    productType,
                    productID,
                    plus}, this.AddOrSubtractOperationCompleted, userState);
    }
    
    private void OnAddOrSubtractOperationCompleted(object arg) {
        if ((this.AddOrSubtractCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddOrSubtractCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost/FillBasket", RequestNamespace="https://localhost/", ResponseNamespace="https://localhost/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet FillBasket(string clientId, string connectionToClient, string clientTable) {
        object[] results = this.Invoke("FillBasket", new object[] {
                    clientId,
                    connectionToClient,
                    clientTable});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginFillBasket(string clientId, string connectionToClient, string clientTable, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("FillBasket", new object[] {
                    clientId,
                    connectionToClient,
                    clientTable}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndFillBasket(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void FillBasketAsync(string clientId, string connectionToClient, string clientTable) {
        this.FillBasketAsync(clientId, connectionToClient, clientTable, null);
    }
    
    /// <remarks/>
    public void FillBasketAsync(string clientId, string connectionToClient, string clientTable, object userState) {
        if ((this.FillBasketOperationCompleted == null)) {
            this.FillBasketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFillBasketOperationCompleted);
        }
        this.InvokeAsync("FillBasket", new object[] {
                    clientId,
                    connectionToClient,
                    clientTable}, this.FillBasketOperationCompleted, userState);
    }
    
    private void OnFillBasketOperationCompleted(object arg) {
        if ((this.FillBasketCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.FillBasketCompleted(this, new FillBasketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost/DeleteFromBasket", RequestNamespace="https://localhost/", ResponseNamespace="https://localhost/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DeleteFromBasket(string product, string tableClients, string clientID, int productID, string connectionToClient) {
        this.Invoke("DeleteFromBasket", new object[] {
                    product,
                    tableClients,
                    clientID,
                    productID,
                    connectionToClient});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteFromBasket(string product, string tableClients, string clientID, int productID, string connectionToClient, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteFromBasket", new object[] {
                    product,
                    tableClients,
                    clientID,
                    productID,
                    connectionToClient}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteFromBasket(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteFromBasketAsync(string product, string tableClients, string clientID, int productID, string connectionToClient) {
        this.DeleteFromBasketAsync(product, tableClients, clientID, productID, connectionToClient, null);
    }
    
    /// <remarks/>
    public void DeleteFromBasketAsync(string product, string tableClients, string clientID, int productID, string connectionToClient, object userState) {
        if ((this.DeleteFromBasketOperationCompleted == null)) {
            this.DeleteFromBasketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFromBasketOperationCompleted);
        }
        this.InvokeAsync("DeleteFromBasket", new object[] {
                    product,
                    tableClients,
                    clientID,
                    productID,
                    connectionToClient}, this.DeleteFromBasketOperationCompleted, userState);
    }
    
    private void OnDeleteFromBasketOperationCompleted(object arg) {
        if ((this.DeleteFromBasketCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteFromBasketCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://localhost/Hash", RequestNamespace="https://localhost/", ResponseNamespace="https://localhost/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Hash(string str) {
        object[] results = this.Invoke("Hash", new object[] {
                    str});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginHash(string str, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Hash", new object[] {
                    str}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndHash(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void HashAsync(string str) {
        this.HashAsync(str, null);
    }
    
    /// <remarks/>
    public void HashAsync(string str, object userState) {
        if ((this.HashOperationCompleted == null)) {
            this.HashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHashOperationCompleted);
        }
        this.InvokeAsync("Hash", new object[] {
                    str}, this.HashOperationCompleted, userState);
    }
    
    private void OnHashOperationCompleted(object arg) {
        if ((this.HashCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.HashCompleted(this, new HashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void AdminLoginCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void NewClientCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void ShowAllGoodsOfTypeCompletedEventHandler(object sender, ShowAllGoodsOfTypeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ShowAllGoodsOfTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ShowAllGoodsOfTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void ShowCatalogCompletedEventHandler(object sender, ShowCatalogCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ShowCatalogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ShowCatalogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void LogInCompletedEventHandler(object sender, LogInCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LogInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal LogInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void BuyProductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void ClientBuyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void AddOrSubtractCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void FillBasketCompletedEventHandler(object sender, FillBasketCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FillBasketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal FillBasketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void DeleteFromBasketCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void HashCompletedEventHandler(object sender, HashCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class HashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal HashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
